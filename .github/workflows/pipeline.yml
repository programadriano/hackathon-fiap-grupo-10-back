
# Nome do Workflow
name: Hackathon Pipeline

# Evento que irá acionar a pipeline
on: 
  push:
    branches:
      - develop

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Download do Repositório
        uses: actions/checkout@v3       # https://github.com/actions/checkout
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4   # https://github.com/actions/setup-python
        with:
          python-version: '3.10'

      - name: Install Requirements
        run:  pip install flask pytest pytest-cov flask-wtf

    #   - name: Unit Test
    #     run: |
    #       coverage run --source=app -m pytest test.py
    #       coverage report -m
    #       coverage xml -i

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master  #https://github.com/marketplace/actions/sonarcloud-scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  

      - name: Docker Login
        run: | 
          echo '${{ secrets.GOOGLE_CREDENTIALS }}' > key.json
          cat key.json | docker login -u _json_key --password-stdin '${{ vars.GOOGLE_ARTIFACT }}'
      - name: Build & Push Image
        run: | 
          docker build -t ${{ vars.GOOGLE_ARTIFACT }}/${{ vars.GOOGLE_PROJECT_ID }}/${{ vars.GOOGLE_REPONAME }}/${{ vars.GOOGLE_MYAPP }}:latest .
          docker push ${{ vars.GOOGLE_ARTIFACT }}/${{ vars.GOOGLE_PROJECT_ID }}/${{ vars.GOOGLE_REPONAME }}/${{ vars.GOOGLE_MYAPP }}:latest

  Deploy-Back:
    needs: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3 # https://github.com/actions/checkout

      - name: Auth GCP
        uses: 'google-github-actions/auth@v1' # https://github.com/google-github-actions/auth
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: Cloud Run Deploy - Back
        id: homolog-deploy
        uses: 'google-github-actions/deploy-cloudrun@v1'  # https://github.com/marketplace/actions/deploy-to-cloud-run
        with:
          service: ${{ vars.GOOGLE_MYAPP }}-back
          image:   ${{ vars.GOOGLE_ARTIFACT }}/${{ vars.GOOGLE_PROJECT_ID }}/${{ vars.GOOGLE_REPONAME }}/${{ vars.GOOGLE_MYAPP }}:latest
          flags: '--allow-unauthenticated'

      - name: Deploy Backend no  Cloud Run
        id: deploy
        run: |-
          gcloud run deploy backend \
            --quiet \
            --region  ${{ secrets.GOOGLE_REGION }} \
            --image ${{ secrets.ARTIFACT_REGISTRY }}/backend:latest \
            --platform managed \
            --set-env-vars CLOUD_SQL_CONNECTION_NAME=${{ secrets.CLOUD_SQL_CONNECTION_NAME }},CLOUD_SQL_DATABASE_NAME=${{ secrets.CLOUD_SQL_DATABASE_NAME }},CLOUD_SQL_PASSWORD=${{ secrets.CLOUD_SQL_PASSWORD }},CLOUD_SQL_USERNAME=${{ secrets.CLOUD_SQL_USERNAME }} \
            --allow-unauthenticated \
            --add-cloudsql-instances ${{ secrets.CLOUD_SQL_CONNECTION_NAME }} \
            --project ${{ secrets.GOOGLE_PROJECT_ID }} \
            --format json
            
#       - name: Test Homolog
#         run: 'curl "${{ steps.homolog-deploy.outputs.url }}"'

#   Deploy-Production:
#     needs: Deploy-Homolog
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout Repo
#         uses: actions/checkout@v3 # https://github.com/actions/checkout

#       - name: Auth GCP
#         uses: 'google-github-actions/auth@v1' # https://github.com/google-github-actions/auth
#         with:
#           credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

#       - name: Cloud Run Deploy - Production
#         id: prod-deploy
#         uses: 'google-github-actions/deploy-cloudrun@v1'  # https://github.com/marketplace/actions/deploy-to-cloud-run
#         with:
#           service: ${{ vars.GOOGLE_MYAPP }}-prod
#           image:   ${{ vars.GOOGLE_ARTIFACT }}/${{ vars.GOOGLE_PROJECT_ID }}/${{ vars.GOOGLE_REPONAME }}/${{ vars.GOOGLE_MYAPP }}:latest
#           flags: '--allow-unauthenticated'

#       - name: Test Prod
#         run: 'curl "${{ steps.prod-deploy.outputs.url }}"'




